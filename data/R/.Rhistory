p.whole = logistic(p.whole)
p.part = logistic(p.part)
p.color = logistic(p.color)
p.rep = logistic(p.rep)
scale = exp(scale)
positions = -2:2
idx.CC.i = 1:5
idx.CC.j = 6:10
p.positions = VGAM::dlaplace(-2:2, 0, scale)
p.positions = p.positions / sum(p.positions)
mat.target = matrix(0, nrow=10, ncol=10)
mat.target[3,8] = 1
mat.whole = matrix(rep(0, 100), nrow=10)
diag(mat.whole[idx.CC.i, idx.CC.j]) <- p.positions
mat.whole <- mat.whole / sum(mat.whole)
v.part.i = p.part*c(p.positions, rep(0, 5)) + (1-p.part)*p.color*c(p.positions, p.positions)/2 + (1-p.part)*(1-p.color)*1/10
v.part.j = p.part*c(rep(0, 5), p.positions) + (1-p.part)*p.color*c(p.positions, p.positions)/2 + (1-p.part)*(1-p.color)*1/10
mat.rep = matrix(0, nrow=10, ncol=10)
diag(mat.rep) <- (v.part.i*0.5+v.part.j*0.5)
mat.rep <- mat.rep / sum(mat.rep)
mat.indep <- outer(v.part.i, v.part.j, function(a,b)(a*b))
mat.indep <- mat.indep / sum(mat.indep)
mat.norep <- mat.indep
diag(mat.norep) <- 0
mat.norep <- mat.norep / sum(mat.norep)
mat.final <- p.target*mat.target +
(1-p.target)*p.whole*mat.whole +
(1-p.target)*(1-p.whole)*(norep*mat.norep +
(1-norep)*(p.rep*mat.rep + (1-p.rep)*mat.indep))
v.part.i
sum(v.part.i)
mat.whole = matrix(rep(0, 100), nrow=10)
diag(mat.whole[idx.CC.i, idx.CC.j]) <- p.positions
sum(mat.whole)
mat.rep = matrix(0, nrow=10, ncol=10)
diag(mat.rep) <- (v.part.i*0.5+v.part.j*0.5)
sum(mat.rep)
mat.indep <- outer(v.part.i, v.part.j, function(a,b)(a*b))
sum(mat.indep)
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/modelAna.ev.rep.R')
fits
str(fits)
failures
data$subject=='d18me'
tmp = subset(data, data$subject=='d18me')
tmp
nrow(tmp)
table(tmp$resp.h.idx, tmp$resp.v.idx)
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/modelAna.ev.rep.R')
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/basicAna.ev.norep.R')
tmp <- recoded.df %>% group_by(version) %>%
summarise(mu= mean(Freq[Var1==3 & Var2==8]))
tmp <- tmp[order(tmp$mu),]
lvl.order = tmp$version
lvl.order
save('lvl.order', file='level.order.Rdata')
ggplot(matchy.stats,
aes(x=version,
y=logodds.all.mu,
ymax=logodds.all.mu+logodds.all.se,
ymin=logodds.all.mu-logodds.all.se,
color=repetition,
group=repetition))+
geom_pointrange(size=1)+
ylab('Log odds correct parts? (no targets)')+
mytheme
ggplot(matchy.stats,
aes(x=version,
y=logodds.nowhole.mu,
ymax=logodds.nowhole.mu+logodds.nowhole.se,
ymin=logodds.nowhole.mu-logodds.nowhole.se,
color=repetition,
group=repetition))+
geom_pointrange(size=1)+
ylab('Log odds correct parts? (no whole intr.)')+
mytheme
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/fit.analysis.R')
fits
load('fits.norep.Rdata')
tmp <- fits
load('fits.rep.Rdata')
fits <- rbind(fits, tmp)
save('fits', file='allfits.Rdata')
load('allfits.Rdata')
mynames <- c('-1' = 'crosses',
'0' = 'bullseyes',
'1'= "eggs",
'2'= "moons",
'5' = 'T (rotate)',
'6'= '1x2',
'8' = '2x2',
'9' = 'T (fixed)',
'11' = '1x2 (gap)',
'12' = 'crosses (overlap)',
'13' = 'boxes (crosses aspect)')
fits$version <- mynames[as.character(fits$version)]
fits <- fits %>%
group_by(repetition, version, subject) %>%
mutate(rBIC = BIC-BIC[model=='all'], rAIC = AIC-AIC[model=='all']) %>%
ungroup()
table(fits$subject, fits$model)
table(fits$subject)
nrow(fits)
mean(table(fits$subject)<4)
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/fit.analysis.R')
nrow(fits)
table(fits$subject)[table(fits$subject)>4]
table(fits$subject)
table(fits$subject)<4
table(fits$subject)==4
names(table(fits$subject))
names(table(fits$subject))[table(fits$subject)==4]
usesubs = names(table(fits$subject))[table(fits$subject)==4]
fits = subset(fits, fits$subject %in% usesubs)
nrow(fits)
fits <- fits %>%
group_by(repetition, version, subject) %>%
mutate(rBIC = BIC-BIC[model=='all'], rAIC = AIC-AIC[model=='all']) %>%
ungroup()
model.comparison <- fits %>% group_by(repetition, version) %>%
summarise(AIC.better.wpart = mean(rAIC[model=='nopart']>0),
AIC.better.wwhole = mean(rAIC[model=='nowhole']>0))
ggplot(fits, aes(x=model, y=rAIC))+facet_grid(.~repetition)+
geom_point()
fits$net.p.target = logistic(fits$p.target)
fits$net.p.whole = (1-logistic(fits$p.target))*logistic(fits$p.whole)
fits$net.p.part = (1-logistic(fits$p.target))*(1-logistic(fits$p.whole))*logistic(fits$p.part)
fits$net.p.color = (1-logistic(fits$p.target))*(1-logistic(fits$p.whole))*(1-logistic(fits$p.part))*logistic(fits$p.color)
fits$net.p.uniform = (1-logistic(fits$p.target))*(1-logistic(fits$p.whole))*(1-logistic(fits$p.part))*(1-logistic(fits$p.color))
a <- fits %>%
group_by(model, repetition, version) %>%
summarise(net.p.uniform.mu = mean(net.p.uniform),
net.p.uniform.se = sd(net.p.uniform)/sqrt(length(net.p.uniform)),
net.p.target.mu = mean(net.p.target),
net.p.target.se = sd(net.p.target)/sqrt(length(net.p.whole)),
net.p.whole.mu = mean(net.p.whole),
net.p.whole.se = sd(net.p.whole)/sqrt(length(net.p.whole)),
net.p.part.mu = mean(net.p.part),
net.p.part.se = sd(net.p.part)/sqrt(length(net.p.whole)),
net.p.color.mu = mean(net.p.color),
net.p.color.se = sd(net.p.color)/sqrt(length(net.p.whole)),
p.target.mu = mean(p.target),
p.target.se = sd(p.target)/sqrt(length(net.p.whole)),
p.whole.mu = mean(p.whole),
p.whole.se = sd(p.whole)/sqrt(length(net.p.whole)),
p.part.mu = mean(p.part),
p.part.se = sd(p.part)/sqrt(length(net.p.whole)),
p.color.mu = mean(p.color),
p.color.se = sd(p.color)/sqrt(length(net.p.whole)),
scale.mu = mean(scale),
scale.se = sd(scale)/sqrt(length(net.p.whole))
)
divisions = data.frame()
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'target',
probability = a$net.p.target.mu))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'whole',
probability = a$net.p.whole.mu))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'part',
probability = a$net.p.part.mu))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'color',
probability = a$net.p.color.mu))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'uniform',
probability = a$net.p.uniform.mu))
ggplot(divisions, aes(x=group, y=probability, fill=response))+facet_grid(.~model)+geom_bar(position = 'fill', stat='identity')
ggplot(subset(divisions, divisions$model=='all'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+scale_y_continuous(expand=c(0,0))+mytheme
load('level.order.Rdata')
fits$version = factor(fits$versionm levels=lvl.order, ordered=TRUE)
fits$version = factor(fits$version, levels=lvl.order, ordered=TRUE)
nrow(fits)
usesubs = names(table(fits$subject))[table(fits$subject)==4]
fits = subset(fits, fits$subject %in% usesubs)
fits <- fits %>%
group_by(repetition, version, subject) %>%
mutate(rBIC = BIC-BIC[model=='all'], rAIC = AIC-AIC[model=='all']) %>%
ungroup()
model.comparison <- fits %>% group_by(repetition, version) %>%
summarise(AIC.better.wpart = mean(rAIC[model=='nopart']>0),
AIC.better.wwhole = mean(rAIC[model=='nowhole']>0))
ggplot(fits, aes(x=model, y=rAIC))+facet_grid(.~repetition)+
geom_point()
fits$net.p.target = logistic(fits$p.target)
fits$net.p.whole = (1-logistic(fits$p.target))*logistic(fits$p.whole)
fits$net.p.part = (1-logistic(fits$p.target))*(1-logistic(fits$p.whole))*logistic(fits$p.part)
fits$net.p.color = (1-logistic(fits$p.target))*(1-logistic(fits$p.whole))*(1-logistic(fits$p.part))*logistic(fits$p.color)
fits$net.p.uniform = (1-logistic(fits$p.target))*(1-logistic(fits$p.whole))*(1-logistic(fits$p.part))*(1-logistic(fits$p.color))
a <- fits %>%
group_by(model, repetition, version) %>%
summarise(net.p.uniform.mu = mean(net.p.uniform),
net.p.uniform.se = sd(net.p.uniform)/sqrt(length(net.p.uniform)),
net.p.target.mu = mean(net.p.target),
net.p.target.se = sd(net.p.target)/sqrt(length(net.p.whole)),
net.p.whole.mu = mean(net.p.whole),
net.p.whole.se = sd(net.p.whole)/sqrt(length(net.p.whole)),
net.p.part.mu = mean(net.p.part),
net.p.part.se = sd(net.p.part)/sqrt(length(net.p.whole)),
net.p.color.mu = mean(net.p.color),
net.p.color.se = sd(net.p.color)/sqrt(length(net.p.whole)),
p.target.mu = mean(p.target),
p.target.se = sd(p.target)/sqrt(length(net.p.whole)),
p.whole.mu = mean(p.whole),
p.whole.se = sd(p.whole)/sqrt(length(net.p.whole)),
p.part.mu = mean(p.part),
p.part.se = sd(p.part)/sqrt(length(net.p.whole)),
p.color.mu = mean(p.color),
p.color.se = sd(p.color)/sqrt(length(net.p.whole)),
scale.mu = mean(scale),
scale.se = sd(scale)/sqrt(length(net.p.whole))
)
divisions = data.frame()
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'target',
probability = a$net.p.target.mu))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'whole',
probability = a$net.p.whole.mu))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'part',
probability = a$net.p.part.mu))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'color',
probability = a$net.p.color.mu))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'uniform',
probability = a$net.p.uniform.mu))
ggplot(subset(divisions, divisions$model=='all'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+scale_y_continuous(expand=c(0,0))+mytheme
# axes:
fiter(fits, model=='all')
dplyr::filter(fits, model='all')
tmp <-dplyr::filter(fits, model=='all')
tmp
hist(tmp$scale)
hist(exp(tmp$scale))
ggplot(fits, aes(x=model, y=rAIC))+facet_grid(.~repetition)+
geom_point()
model.comparison
ggplot(model.comparison, aes(x=model, y=AIC.better.wpart))+facet_grid(.~repetition)+
geom_point()
ggplot(model.comparison, aes(x=version, y=AIC.better.wpart))+facet_grid(.~repetition)+
geom_point()
ggplot(model.comparison, aes(x=version, y=AIC.better.wwhole))+facet_grid(.~repetition)+
geom_point()
ggplot(model.comparison, aes(x=version, y=AIC.better.wpart))+facet_grid(.~repetition)+
geom_point()
ggplot(subset(divisions, divisions$model=='all'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+scale_y_continuous(expand=c(0,0))+mytheme
divisions
ggplot(subset(divisions, divisions$model=='nowhole'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+scale_y_continuous(expand=c(0,0))+mytheme
ggplot(subset(divisions, divisions$model=='nopart'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+scale_y_continuous(expand=c(0,0))+mytheme
ggplot(subset(divisions, divisions$model=='nowholepart'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+scale_y_continuous(expand=c(0,0))+mytheme
ggplot(subset(divisions, divisions$model=='all'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+scale_y_continuous(expand=c(0,0))+mytheme
colors = c('target'='#000000',
'uniform'='#DDDDDD',
'part'='#DD0000',
'whole'='#00AA00',
'color'='#0000FF')
ggplot(subset(divisions, divisions$model=='all'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+
scale_y_continuous(expand=c(0,0))+mytheme+scale_fill_manual(values = colors)
colors = c('target'='#000000',
'uniform'='#AAAAAA',
'part'='#DD0000',
'whole'='#00AA00',
'color'='#8888FF')
ggplot(subset(divisions, divisions$model=='all'), aes(x=version, y=probability, fill=response))+
facet_grid(.~repetition)+geom_bar(position = 'fill', stat='identity')+
scale_y_continuous(expand=c(0,0))+mytheme+scale_fill_manual(values = colors)
library(dplyr)
fits%>%filter(model=='all')%>%group_by(repetition, version)%>%summarise(scale.mu=mean(scale), scale.se=sd(scale)/sqrt(length(scale)))
scales <- fits%>%filter(model=='all')%>%group_by(repetition, version)%>%summarise(scale.mu=mean(scale), scale.se=sd(scale)/sqrt(length(scale)))
ggplot(scales, aes(x=version, y=scale.mu, ymin=scale.mu-scale.se, ymax=scale.mu+scale.se))+facet_grid(.~repetition)
ggplot(scales, aes(x=version, y=scale.mu, ymin=scale.mu-scale.se, ymax=scale.mu+scale.se))+facet_grid(.~repetition)+geom_pointrange()
ggplot(scales, aes(x=version, y=exp(scale.mu), ymin=exp(scale.mu-scale.se), ymax=exp(scale.mu+scale.se))+facet_grid(.~repetition)+geom_pointrange()
)
ggplot(scales, aes(x=version, y=exp(scale.mu), ymin=exp(scale.mu-scale.se), ymax=exp(scale.mu+scale.se)))+facet_grid(.~repetition)+geom_pointrange()
v = predictMat(p.target=100,
p.whole = -100,
p.part = -100,
p.color = -100,
p.rep = -100,
scale=log(0.65),
norep=0)
data.frame(v)
as.data.frame(v)
v
as.table(v)
as.data.frame(as.table(v))
rownames(v) = 1:10
colnames(v) = 1:10
as.data.frame(as.table(v))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
g+theme(legend.position='none',
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
g <- ggplot(dat, aes(y=Var1, x=Var2, size=Freq, color = type))+
geom_point()+
theme_bw()+
scale_y_reverse(breaks = 1:10)+
scale_x_continuous(breaks = 1:10)+
scale_color_manual(values=colors)
g+theme(legend.position='none',
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
g
source('~/.active-rstudio-document')
g
source('~/.active-rstudio-document')
print(g)
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/model.demo.R')
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/model.demo.R')
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/model.demo.R')
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/model.demo.R')
source('~/PROJECTS/multicolor-binding/github/ColorBinding/data/R/model.demo.R')
ggplot(divisions, aes(x=group, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~model)+
geom_bar(position = 'fill', stat='identity')
divisions = data.frame()
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'target',
probability = a$net.p.target.mu,
probability.se = a$net.p.target.se))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'whole',
probability = a$net.p.whole.mu,
probability.se = a$net.p.whole.se))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'part',
probability = a$net.p.part.mu,
probability.se = a$net.p.part.se))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'color',
probability = a$net.p.color.mu,
probability.se = a$net.p.color.se))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'uniform',
probability = a$net.p.uniform.mu,
probability.se = a$net.p.uniform.se))
ggplot(divisions, aes(x=group, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~model)+
geom_bar(position = 'fill', stat='identity')
colors = c('target'='#000000',
'uniform'='#AAAAAA',
'part'='#DD0000',
'whole'='#00AA00',
'color'='#8888FF')
ggplot(subset(divisions, divisions$model=='all'),
aes(x=version, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~repetition)+
geom_bar(position = 'fill', stat='identity')+
geom_pointrange(position = 'fill', stat='identity')+
scale_y_continuous(expand=c(0,0))+mytheme+scale_fill_manual(values = colors)
subset(divisions, divisions$model=='all')
ggplot(subset(divisions, divisions$model=='all'),
aes(x=version, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~repetition)+
geom_bar(position = 'fill', stat='identity')+
geom_pointrange())+
scale_y_continuous(expand=c(0,0))+mytheme+scale_fill_manual(values = colors)
ggplot(subset(divisions, divisions$model=='all'),
aes(x=version, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~repetition)+
geom_bar(position = 'fill', stat='identity')+
geom_pointrange()+
scale_y_continuous(expand=c(0,0))+mytheme+scale_fill_manual(values = colors)
ggplot(subset(divisions, divisions$model=='all'),
aes(x=version, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~repetition)+
geom_bar(position = 'fill', stat='identity')+
geom_pointrange(aes( y=cum.prob, ymin=cum.prob-probability.se, ymax=cum.prob+probability.se))+
scale_y_continuous(expand=c(0,0))+mytheme+scale_fill_manual(values = colors)
divisions = data.frame()
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'target',
probability = a$net.p.target.mu,
cum.prob = a$net.p.target.mu,
probability.se = a$net.p.target.se))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'whole',
probability = a$net.p.whole.mu,
cum.prob = a$net.p.target.mu+a$net.p.whole.mu,
probability.se = a$net.p.whole.se))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'part',
probability = a$net.p.part.mu,
cum.prob = a$net.p.target.mu+a$net.p.whole.mu+a$net.p.part.mu,
probability.se = a$net.p.part.se))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'color',
probability = a$net.p.color.mu,
cum.prob = a$net.p.target.mu+a$net.p.whole.mu+a$net.p.part.mu+a$net.p.color.mu,
probability.se = a$net.p.color.se))
divisions = rbind(divisions,
data.frame(group = interaction(a$repetition, a$version),
repetition = a$repetition,
version = a$version,
model = a$model,
response = 'uniform',
probability = a$net.p.uniform.mu,
cum.prob = a$net.p.target.mu+a$net.p.whole.mu+a$net.p.part.mu+a$net.p.color.mu+a$net.p.uniform.mu,
probability.se = a$net.p.uniform.se))
ggplot(divisions, aes(x=group, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~model)+
geom_bar(position = 'fill', stat='identity')
colors = c('target'='#000000',
'uniform'='#AAAAAA',
'part'='#DD0000',
'whole'='#00AA00',
'color'='#8888FF')
ggplot(subset(divisions, divisions$model=='all'),
aes(x=version, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~repetition)+
geom_bar(position = 'fill', stat='identity')+
geom_pointrange(aes( y=cum.prob, ymin=cum.prob-probability.se, ymax=cum.prob+probability.se))+
scale_y_continuous(expand=c(0,0))+mytheme+scale_fill_manual(values = colors)
?geom_pointrange
ggplot(subset(divisions, divisions$model=='all'),
aes(x=version, y=probability, ymin=probability-probability.se, ymax=probability+probability.se, fill=response))+
facet_grid(.~repetition)+
geom_bar(position = 'fill', stat='identity')+
geom_pointrange(aes( y=cum.prob, ymin=cum.prob-probability.se, ymax=cum.prob+probability.se))+
scale_y_continuous(expand=c(0,0), limits = c(0,1))+mytheme+scale_fill_manual(values = colors)
