}
}
file
datafile
glimpse(datafile)
glimpse(data)
data %>% count(experiment, subject)
data %>% count(experiment, subjectID)
data %>% count(experiment, subjectID) %>% count(experiment)
data %>% count(experiment, subjectID) %>% ungroup() %>% count(experiment)
save(data, file = 'alldata.Rdata')
glimpse(data)
table(data$version.bars, data$version.offset)
datafile
datafile <- read.csv(paste0(data.paths[[expt]], file), stringsAsFactors = F)
datafile$bars.or.spot
table(data$version, data$version.offset)
table(data$version, data$version.bars)
table(data$version.bars[is.na(data$version)], data$version.bars[is.na(data$version)])
table(data$version.bars[is.na(data$version)], data$version.offset[is.na(data$version)])
datafile$bars.or.spot
data <- data %>%
mutate(vesion.final = case_when(
!is.na(version) ~ version,
!(version.bars %in% c(-1,0)) ~ version.offset,
TRUE ~ version.bars
))
data <- data %>%
mutate(vesion.final = case_when(
!is.na(version) ~ as.integer(version),
!(version.bars %in% c(-1,0)) ~ as.integer(version.offset),
TRUE ~ as.integer(version.bars)
))
table(data$version, data$version.final)
data$versionglimpse(data)
glimpse(data)
table(data$vesion.final)
load('alldata.Rdata')
data <- data %>%
mutate(version.final = case_when(
!is.na(version) ~ as.integer(version),
!(version.bars %in% c(-1,0)) ~ as.integer(version.offset),
TRUE ~ as.integer(version.bars)
))
table(data$version, data$version.final)
table(data$version.offset, data$version.final)
table(data$version.bars, data$version.final)
data <- data %>%
mutate(version = case_when(
!is.na(version) ~ as.integer(version),
!(version.bars %in% c(-1,0)) ~ as.integer(version.offset),
TRUE ~ as.integer(version.bars)
))
save(data, file = 'alldata.Rdata')
version.summary <- data %>% count(expt, subjectID, version) %>%
ungroup() %>%
group_by(expt, version) %>%
summarize(min.trials = min(n), max.trials = max(n), subjects = n()) %>%
mutate(description = version.code[as.character(version)]) %>%
arrange(expt, desc(subjects))
version.summary <- data %>% count(experiment, subjectID, version) %>%
ungroup() %>%
group_by(experiment, version) %>%
summarize(min.trials = min(n), max.trials = max(n), subjects = n()) %>%
mutate(description = version.code[as.character(version)]) %>%
arrange(experiment, desc(subjects))
version.summary %>%
knitr::kable()
data.paths = list('sequential' = '../sequential-selection/data/',
#'simultaneous.rep' =  '../simultaneous-selection/data/data_rep/',
'simultaneous' =  '../simultaneous-selection/data/data_norep/'
#'simultaneous.no-rep2' =  '../simultaneous-selection/data/data_norep2/'
)
data <- data.frame()
i = 1
colstructure = list()
for(expt in names(data.paths)){
files <- list.files(data.paths[[expt]])
filetype <- files %>%
as.list() %>%
map_chr(function(file){substr(file,nchar(file)-4,nchar(file)-4)})
files <- subset(files, filetype == '1')
for (file in files){
datafile <- read.csv(paste0(data.paths[[expt]], file), stringsAsFactors = F)
if(nrow(datafile)>100){
if("offsett" %in% names(datafile)){
datafile <- datafile %>%
mutate(offset = offsett) %>%
select(-offsett)
}
if(!('version' %in% names(datafile))){
datafile$version = NA
}
if(!('offset' %in% names(datafile))){
datafile$offset = NA
}
datafile <- datafile %>%
mutate(version.bars = bars.or.spot - 2,
version.offset = case_when(
offset == 3.75 ~ 1,
offset == 5 ~ 2,
offset == 5.5 ~ 3,
offset == 4.5 ~ 4,
offset == -10.5 ~ 5,
offset == -9 ~ 6,
offset == 0 ~ NA_real_,
TRUE ~ NA_real_)) %>%
select(cue.length, cue.loc.int, cue.loc.x, cue.loc.y,
ms.precue, ms.st.cue, ms.stimon, nitems, npractice, ntrials, radius,
resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
version, version.bars, version.offset) %>%
mutate(experiment = expt,
subjectID = substr(file,7,nchar(file)-6))
data <- rbind(data, datafile)
}
}
}
data <- data %>%
mutate(version = case_when(
!is.na(version) ~ as.integer(version),
!(version.bars %in% c(-1,0)) ~ as.integer(version.offset),
TRUE ~ as.integer(version.bars)
))
save(data, file = 'alldata.Rdata')
version.code = c(
'-1' = 'Crosses',
'0' = 'bulls eyes',
'1' = "eggs (offset bulls eyes)",
'2'  = "moons (offset bulls eyes with the middle popping out)",
'3' = 'played with size A (abandoned)',
'4' = 'played with size B (abandoned)',
'5' = 'Ts that rotate around the display',
'6' = 'stacked boxes',
'7' = 'windows (2x2 boxes, abandoned)',
'8' = 'dots and boxes (2x2 grid of circles and squares.)',
'9'  = 'non rotating Ts',
'10' = 'stacked Ts (abandoned)',
'11' = 'boxes with a gap',
'12' = 'crosses that overlap',
'13' = 'box outlines')
version.code = c(
'-1' = 'Crosses',
'0' = 'bulls eyes',
'1' = "eggs",
'2'  = "moons",
'3' = 'played with size A (abandoned)',
'4' = 'played with size B (abandoned)',
'5' = 'Ts (rotating)',
'6' = 'stacked boxes',
'7' = 'windows (2x2 boxes, abandoned)',
'8' = '2x2 dots and boxes',
'9'  = 'Ts (fixed)',
'10' = 'stacked Ts (abandoned)',
'11' = 'boxes +gap',
'12' = 'crosses +overlap',
'13' = 'box outlines')
version.summary <- data %>% count(experiment, subjectID, version) %>%
ungroup() %>%
group_by(experiment, version) %>%
summarize(min.trials = min(n), max.trials = max(n), subjects = n()) %>%
mutate(description = version.code[as.character(version)]) %>%
arrange(experiment, desc(subjects))
version.summary %>%
knitr::kable()
data <- data %>% mutate(
resp.h.hv = as.numeric(as.character(resp.h.hv)),
resp.v.hv = as.numeric(as.character(resp.v.hv)),
resp.h.pos = as.numeric(as.character(resp.h.pos)),
resp.v.pos = as.numeric(as.character(resp.v.pos)),
# Acorrect = ifelse(resp.h.pos==0 & resp.h.hv == 1, T, F),
# Bcorrect = ifelse(resp.v.pos==0 & resp.v.hv == 2, T, F),
# anyCorrect = Acorrect | Bcorrect,
# allCorrect = Acorrect & Bcorrect,
# sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error')
)
load('alldata.Rdata')
version.code = c(
'-1' = 'Crosses',
'0' = 'bulls eyes',
'1' = "eggs (offset bulls eyes)",
'2'  = "moons (offset bulls eyes with the middle popping out)",
'3' = 'played with size A (abandoned)',
'4' = 'played with size B (abandoned)',
'5' = 'Ts that rotate around the display',
'6' = 'stacked boxes',
'7' = 'windows (2x2 boxes, abandoned)',
'8' = 'dots and boxes (2x2 grid of circles and squares.)',
'9'  = 'non rotating Ts',
'10' = 'stacked Ts (abandoned)',
'11' = 'boxes with a gap',
'12' = 'crosses that overlap',
'13' = 'box outlines')
version.code = c(
'-1' = 'Crosses',
'0' = 'bulls eyes',
'1' = "eggs",
'2'  = "moons",
'3' = 'played with size A (abandoned)',
'4' = 'played with size B (abandoned)',
'5' = 'Ts (rotating)',
'6' = 'stacked boxes',
'7' = 'windows (2x2 boxes, abandoned)',
'8' = '2x2 dots and boxes',
'9'  = 'Ts (fixed)',
'10' = 'stacked Ts (abandoned)',
'11' = 'boxes +gap',
'12' = 'crosses +overlap',
'13' = 'box outlines')
version.summary <- data %>% count(experiment, subjectID, version) %>%
ungroup() %>%
group_by(experiment, version) %>%
summarize(min.trials = min(n), max.trials = max(n), subjects = n()) %>%
mutate(description = version.code[as.character(version)]) %>%
arrange(experiment, desc(subjects))
version.summary %>%
knitr::kable()
data <- data %>%
filter(version %in% version.summary$version[version.summary$subjects > 10])
version.summary <- data %>% count(experiment, subjectID, version) %>%
ungroup() %>%
group_by(experiment, version) %>%
summarize(min.trials = min(n), max.trials = max(n), subjects = n()) %>%
mutate(description = version.code[as.character(version)]) %>%
arrange(experiment, desc(subjects))
version.summary %>%
knitr::kable()
data <- data %>% mutate(
resp.h.hv = as.numeric(as.character(resp.h.hv)),
resp.v.hv = as.numeric(as.character(resp.v.hv)),
resp.h.pos = as.numeric(as.character(resp.h.pos)),
resp.v.pos = as.numeric(as.character(resp.v.pos))
# Acorrect = ifelse(resp.h.pos==0 & resp.h.hv == 1, T, F),
# Bcorrect = ifelse(resp.v.pos==0 & resp.v.hv == 2, T, F),
# anyCorrect = Acorrect | Bcorrect,
# allCorrect = Acorrect & Bcorrect,
# sameObj = resp.h.pos == resp.v.pos,
)
tmp <- data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(subjectID) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
mutate(experiment = first(experiment[!is.na(experiment)]),
version = first(version[!is.na(version)]),
n = ifelse(is.na(n), 0, n),
sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error')) %>%
ungroup() %>%
group_by(experiment, subjectID, version) %>%
mutate(p = n/sum(n)) %>%
filter(sameObj) %>%
mutate(pos = resp.h.pos) %>%
ungroup() %>%
group_by(version, partMatch, pos) %>%
summarise(mean.p = mean(p), sd.p = sd(p), n.ss=n(), sem.p = sd.p/sqrt(n.ss))
tmp %>% mutate(description = version.code[as.character(version)]) %>%
ggplot(aes(x=pos, y=mean.p, color=partMatch))+
facet_wrap(experiment~description)+
geom_pointrange(aes(ymin = mean.p-sem.p, ymax=mean.p+sem.p), size=0.3)+
geom_line() +
scale_color_manual(values=c('blue', 'gray', 'red', 'gray'))+
theme_minimal()+
theme(strip.text = element_text(face='bold'))
glimpse(tmp)
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(subjectID) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
mutate(experiment = first(experiment[!is.na(experiment)]),
version = first(version[!is.na(version)]),
n = ifelse(is.na(n), 0, n),
sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error')) %>%
ungroup()
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(subjectID)
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(subjectID) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv)
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
mutate(experiment = first(experiment[!is.na(experiment)]),
version = first(version[!is.na(version)]),
n = ifelse(is.na(n), 0, n),
sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error')) %>%
ungroup()
tmp <- data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
mutate(experiment = first(experiment[!is.na(experiment)]),
version = first(version[!is.na(version)]),
n = ifelse(is.na(n), 0, n),
sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error'),
p = n/sum(n),
pos = resp.h.pos) %>%
filter(sameObj) %>%
ungroup() %>%
group_by(version, partMatch, pos) %>%
summarise(mean.p = mean(p), sd.p = sd(p), n.ss=n(), sem.p = sd.p/sqrt(n.ss))
tmp <- data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
mutate(n = ifelse(is.na(n), 0, n),
sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error'),
p = n/sum(n),
pos = resp.h.pos) %>%
filter(sameObj) %>%
ungroup() %>%
group_by(version, partMatch, pos) %>%
summarise(mean.p = mean(p), sd.p = sd(p), n.ss=n(), sem.p = sd.p/sqrt(n.ss))
tmp
?complete
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
fill = list('n' = 0))
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
fill = list('n' = 0)) %>%
summarize(obs = n())
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
fill = list('n' = 0)) %>%
summarize(obs = n()) %>% ungroup() %>% summarise(min.obs = min(obs))
tmp <- data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
fill = list('n' = 0)) %>%
mutate(sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error'),
p = n/sum(n),
pos = resp.h.pos) %>%
filter(sameObj) %>%
ungroup() %>%
group_by(version, partMatch, pos) %>%
summarise(mean.p = mean(p), sd.p = sd(p), n.ss=n(), sem.p = sd.p/sqrt(n.ss))
tmp %>% mutate(description = version.code[as.character(version)]) %>%
ggplot(aes(x=pos, y=mean.p, color=partMatch))+
facet_wrap(experiment~description)+
geom_pointrange(aes(ymin = mean.p-sem.p, ymax=mean.p+sem.p), size=0.3)+
geom_line() +
scale_color_manual(values=c('blue', 'gray', 'red', 'gray'))+
theme_minimal()+
theme(strip.text = element_text(face='bold'))
tmp
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
fill = list('n' = 0)) %>%
mutate(sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error'),
p = n/sum(n),
pos = resp.h.pos) %>%
filter(sameObj)
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error'),
p = n/sum(n),
pos = resp.h.pos) %>%
filter(sameObj) %>%
ungroup() %>%
group_by(experiment, version, partMatch, pos) %>%
summarise(mean.p = mean(p), sd.p = sd(p), n.ss=n(), sem.p = sd.p/sqrt(n.ss))
tmp <- data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
fill = list('n' = 0)) %>%
mutate(sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error'),
p = n/sum(n),
pos = resp.h.pos) %>%
filter(sameObj) %>%
ungroup() %>%
group_by(experiment, version, partMatch, pos) %>%
summarise(mean.p = mean(p), sd.p = sd(p), n.ss=n(), sem.p = sd.p/sqrt(n.ss))
tmp %>% mutate(description = version.code[as.character(version)]) %>%
ggplot(aes(x=pos, y=mean.p, color=partMatch))+
facet_wrap(experiment~description)+
geom_pointrange(aes(ymin = mean.p-sem.p, ymax=mean.p+sem.p), size=0.3)+
geom_line() +
scale_color_manual(values=c('blue', 'gray', 'red', 'gray'))+
theme_minimal()+
theme(strip.text = element_text(face='bold'))
tmp %>% mutate(description = version.code[as.character(version)]) %>%
ggplot(aes(x=pos, y=mean.p, color=partMatch))+
facet_grid(experiment~description)+
geom_pointrange(aes(ymin = mean.p-sem.p, ymax=mean.p+sem.p), size=0.3)+
geom_line() +
scale_color_manual(values=c('blue', 'gray', 'red', 'gray'))+
theme_minimal()+
theme(strip.text = element_text(face='bold'))
tmp %>% mutate(description = version.code[as.character(version)]) %>%
ggplot(aes(x=pos, y=mean.p, color=partMatch))+
facet_grid(description~experiment)+
geom_pointrange(aes(ymin = mean.p-sem.p, ymax=mean.p+sem.p), size=0.3)+
geom_line() +
scale_color_manual(values=c('blue', 'gray', 'red', 'gray'))+
theme_minimal()+
theme(strip.text = element_text(face='bold'))
tmp %>% mutate(description = version.code[as.character(version)]) %>%
ggplot(aes(x=pos, y=mean.p, color=partMatch))+
facet_grid(description~experiment)+
geom_pointrange(aes(ymin = mean.p-sem.p, ymax=mean.p+sem.p), size=0.3)+
geom_line() +
scale_color_manual(values=c('correct'='blue',
'repeated'='gray',
'swapped'='red',
'error' = 'orange'))+
theme_minimal()+
theme(strip.text = element_text(face='bold'))
tmp <- data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
fill = list('n' = 0)) %>%
mutate(n=n+1) %>%
mutate(sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error'),
p = n/sum(n),
log.p = log(p),
pos = resp.h.pos) %>%
filter(sameObj) %>%
ungroup() %>%
group_by(experiment, version, partMatch, pos) %>%
summarise(mean.p = mean(log.p), sd.p = sd(log.p), n.ss=n(), sem.p = sd.p/sqrt(n.ss))
tmp %>% mutate(description = version.code[as.character(version)]) %>%
ggplot(aes(x=pos, y=mean.p, color=partMatch))+
facet_grid(description~experiment)+
geom_pointrange(aes(ymin = mean.p-sem.p, ymax=mean.p+sem.p), size=0.3)+
geom_line() +
scale_color_manual(values=c('correct'='blue',
'repeated'='gray',
'swapped'='red',
'error' = 'orange'))+
theme_minimal()+
theme(strip.text = element_text(face='bold'))
data %>%
count(experiment, subjectID, version, resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv) %>%
group_by(experiment, subjectID, version) %>%
complete(resp.h.pos, resp.v.pos, resp.h.hv, resp.v.hv,
fill = list('n' = 0)) %>%
mutate(n=n+1) %>%
mutate(sameObj = resp.h.pos == resp.v.pos,
partMatch = case_when(
resp.h.hv == 1 & resp.v.hv == 2 ~ 'correct',
resp.h.hv == 2 & resp.v.hv == 1 ~ 'swapped',
resp.h.hv == resp.v.hv ~ 'repeated',
TRUE ~ 'error'),
p = n/sum(n),
log.p = log(p),
pos = resp.h.pos) %>%
filter(partMatch=='error')
sum(1:10)
sum((1:10)+1)
